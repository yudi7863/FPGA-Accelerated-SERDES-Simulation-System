	component TX is
		port (
			clk_clk                                    : in  std_logic                     := 'X';             -- clk
			gray_decoder_0_data_out_data_out           : out std_logic;                                        -- data_out
			gray_decoder_0_data_out_data_out_valid     : out std_logic;                                        -- data_out_valid
			gray_decoder_0_symbol_in_symbol_in         : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- symbol_in
			gray_decoder_0_symbol_in_symbol_in_valid   : in  std_logic                     := 'X';             -- symbol_in_valid
			gray_encoder_0_data_in_data_in             : in  std_logic                     := 'X';             -- data_in
			gray_encoder_0_data_in_data_in_valid       : in  std_logic                     := 'X';             -- data_in_valid
			gray_encoder_0_symbol_out_symbol_out       : out std_logic_vector(1 downto 0);                     -- symbol_out
			gray_encoder_0_symbol_out_symbol_out_valid : out std_logic;                                        -- symbol_out_valid
			onchip_memory2_0_s1_address                : in  std_logic_vector(9 downto 0)  := (others => 'X'); -- address
			onchip_memory2_0_s1_clken                  : in  std_logic                     := 'X';             -- clken
			onchip_memory2_0_s1_chipselect             : in  std_logic                     := 'X';             -- chipselect
			onchip_memory2_0_s1_write                  : in  std_logic                     := 'X';             -- write
			onchip_memory2_0_s1_readdata               : out std_logic_vector(31 downto 0);                    -- readdata
			onchip_memory2_0_s1_writedata              : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			onchip_memory2_0_s1_byteenable             : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			reset_reset_n                              : in  std_logic                     := 'X'              -- reset_n
		);
	end component TX;

